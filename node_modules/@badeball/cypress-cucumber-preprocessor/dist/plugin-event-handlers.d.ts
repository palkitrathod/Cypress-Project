import * as messages from "@cucumber/messages";
import { ITaskSpecEnvelopes, ITaskCreateStringAttachment, ITaskTestCaseStarted, ITaskTestStepStarted, ITaskTestStepFinished, ITaskTestCaseFinished } from "./cypress-task-definitions";
import { IStepHookParameter } from "./public-member-types";
export declare function beforeRunHandler(config: Cypress.PluginConfigOptions): Promise<void>;
export declare function afterRunHandler(config: Cypress.PluginConfigOptions, results: CypressCommandLine.CypressRunResult | CypressCommandLine.CypressFailedRunResult): Promise<void>;
export declare function beforeSpecHandler(config: Cypress.PluginConfigOptions, spec: Cypress.Spec): Promise<void>;
export declare function afterSpecHandler(config: Cypress.PluginConfigOptions, spec: Cypress.Spec, results: CypressCommandLine.RunResult): Promise<void>;
export declare function afterScreenshotHandler(config: Cypress.PluginConfigOptions, details: Cypress.ScreenshotDetails): Promise<Cypress.ScreenshotDetails>;
export declare function specEnvelopesHandler(config: Cypress.PluginConfigOptions, data: ITaskSpecEnvelopes): Promise<boolean>;
export declare function testCaseStartedHandler(config: Cypress.PluginConfigOptions, data: ITaskTestCaseStarted): Promise<boolean>;
export declare function testStepStartedHandler(config: Cypress.PluginConfigOptions, data: ITaskTestStepStarted): boolean;
export type Attach = (data: string | Buffer, mediaTypeOrOptions?: string | {
    mediaType: string;
    fileName?: string;
}) => void;
export type OnAfterStep = (options: {
    attach: Attach;
    log: (text: string) => void;
    result: messages.TestStepResult;
} & IStepHookParameter) => Promise<void> | void;
export declare function testStepFinishedHandler(config: Cypress.PluginConfigOptions, options: {
    onAfterStep?: OnAfterStep;
}, testStepFinished: ITaskTestStepFinished): Promise<boolean>;
export declare function testCaseFinishedHandler(config: Cypress.PluginConfigOptions, data: ITaskTestCaseFinished): boolean;
export declare function createStringAttachmentHandler(config: Cypress.PluginConfigOptions, { data, fileName, mediaType, encoding }: ITaskCreateStringAttachment): Promise<boolean>;
